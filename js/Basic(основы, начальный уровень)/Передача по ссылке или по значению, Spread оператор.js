//изучение создание ссылок объекта и передача
"use strict";                   //строгий режим

let a = 5,                      // создаем переменную и присвоим значение 5
    b = a;                      // присвоить переменной b значение a (сделаем их равными)
b = b + 5;                      // переменной b присвоим сумму = b (сейчас она равна а = 5) + 5;

console.log(b);                 //выведем в консоль результат b (ответ 10)
console.log(a);                 //выведем в консоль результат а (ответ 5)

/*******************Попробуем аналогично произвести присвоение только объекту*******************/

const obj = {                   //создадим объект obj и присвоим значение ниже
    a: 5,                       //а присвоим 5
    b: 1                        //b присвоим 1
};

/*const copy = obj;             //присвоим перем. copy = obj. Самое интересное что данные не скопируются а создадут ссылка на объект

copy.a = 10;                    //для проверки в новый объект copy присвоим значение 10

console.log(copy);              //выведем в консоль новый объект (а = 10 мы его присвоили выше)
console.log(obj);   */          //выведем в консоль старый объект (его мы не меняли но он тоже покаже а = 10, т.к. в js создается ссылка на объект)

/*********************Вариант обхода ссылки, необходимо обработать каждый элемент объекта (подъобъекты не включаются)****************************** */

function copy(mainObj) {                    //создаем функцию copy которая при запуске подставит значения mainobj и выполнит ниже
    let objCopy = {};                       //создаем объект = пустоту (пустой объект, без данных)
    for (let key in mainObj) {              //начиная (создаем переменую key) до окончания в объекте mainObj выполни ниже
        objCopy[key] = mainObj[key];        //новый объект objCopy с индексом key (он будет с 0 до количество элементов в mainobj) присвой значения из старого объекта mainobj с таким же индексом
    }                                       //небольшое пояснения мы создаем новывый объект с индексом 0 и присваеваем значение из старого объекта с таким же индексом 0, т.е. кзаписываем в новый объект значения старого по индексам
    return objCopy;                         //вернуть результать 
}
//создадим объект который передадим в функции, т.е. этот объект у нас и будет копироваться

const numbers = {                           //создать объект numbers и присвоить значения ниже
    a: 2,                                   //переменной а = 2
    b: 5,                                   //переменной b = 5
    c: {                                    //объекту c присвоить ниже
        x: 7,                               //переменной х =7
        y: 4                                //переменной у = 2
    }
};

const newNumbers = copy(numbers);           //создаем новый объект и присваиваем результат который получем при выполнения функции copy (она выше) передать аргумент numbers

newNumbers.a = 10;                          //в новый объект присвоим в элемент.а(там сейчас 2) значение 10 для проверки что создан отдельный элемент а не ссылка на старый
newNumbers.c.x = 10;                        //в новый объект запишем в переменую которая находилась в объекте значение 10

console.log(newNumbers);                    //выведем результат в  (увидем что number.a =2, а новый элемент newNumbers.a = 10 тем самым это не ссылка а новый объект с такими же ключами)
console.log(numbers);                       //выведем в консоль number (но обратите внимание что С - это объект внутри объекта и при его присвоении объекта в объект создалась ссылка и при изменении подобъекта в новом объекте и в старом тоже значение изменилось т.к. получили ссылку)

/****************Слияние объектов****************************/

const add = {                               //в переменую add присвоить значения ниже 
    d: 17,                                  //в переменую d присвоить значение 17
    e: 20                                   //в переменую e присвоить значение 20
};

console.log(Object.assign(numbers, add));   //выведем результат (объект.соединить вместе(с начала number, прибавим add))

const clone = Object.assign({}, add);       //создать переменую clone присвоить (объект.соединить вместе (пустой объект, прибавим add))

clone.d = 20;                               //присвоим значение 20

console.log(add);                           //выведем в консоль add (первоначальное значение)
console.log(clone);                         //выведем в консоль результат (слияния пустота + add) т.е. получим новый объект а не ссылку на старый

/***********Работа с массивами************************/

const oldArray = ['a', 'b', 'c'];           //создаем массив oldArray = записываем значения
const newArray = oldArray.slice();          //создадим новый массив newArray = записываем значение старого массива.извлеч(в даном случае мы не указали начало и конец поэтому излечет весь массив, на объекты создаст ссылки) 

newArray[1] = 'adasdasda';                  //для проверки в индекс новго массива присвоим текс (на объекты будет ссылки т.е. старый объект измениться)
console.log(newArray);                      //выведем результат нового массива (он будет изменён)
console.log(oldArray);                      //выведем результат исходного массива (как мы видем, исходный результат не изменен)

/***********Добавление целого массива в массив(оооочеенььь круто и просто!!!!!)**************/

const video = ['youtube', 'video', 'rutube'],                   //создаем постоянный массив данных = присвоим значения[]
      blogs = ['wordpress', 'livejournal', 'blogger'],          //создаем постоянный массив данных = присвоим значения[]
      internet = [...video, ...blogs, 'vk', 'facebook'];        //создаем постоянный массив данных = присвоим значения[...все значения массива video(youtube,rutybe и т.д), ...все значения массива blogs, добавить элементы текста]
console.log(internet);                                          //вывести результат массива internet(для проверки мы увидем все значения двух уже созданных массивов и два новых значения)

/*********Передача объекта отдельными частями в функцию (проверим как работает предыдущий метод с объектами)******/

function log(a, b, c) {                                         //создаем функцию с названием log (которая переносит в себе 3 аргумента ) выполни ниже
    console.log(a);                                             //вывести в консоль значение а
    console.log(b);                                             //вывести в консоль значение b
    console.log(c);                                             //вывести в консоль значение c
}
const num = [2, 5, 7];                                          //создаем переменую постояную num = присвоим значение массива
log(...num);                                                    //запустим функцию log (и передаем массив ...num) в данном случае поступит 3 отдельных элемента

const array = ["a", "b"];                                       //создаем постоянный массив = присваиваем два элемента

const newArray = [...array];                                    //создаем новый массив и присваеваем значение старого массива
//console.log(newArray);                                        //вывести результат для проверки

/***************************работа с объектами******************************/

const q = {                                                     //создать объект q = выполни ниже
    one: 1,                                                     //переменной one присвоить значение 1
    two: 2                                                      //переменной two присвоить значение 2
};

const newObj = {...q};                                          //создать новый объект newobj = значение старого объекта q
newObj.one = 10;                                                //в новом объекте переменной one = значение 10
console.log(q);                                                 //вывести старый объект q
console.log(newObj);                                            //вывести новый объект в котором сделали изменения (для проверки если изменился только новый значит создан новый объект, а не его ссылка на старый)